parameters:
- name: EnvironmentName
  type: string
  default: ''
- name: AzureSubscription
  type: string
  default: ''
- name: AzureFunctionName
  type: string
  default: ''
- name: ArtifactName
  type: string
  default: 'drop'
# - name: AzureResourceGroup
#   type: string
#   default: ''
# - name: UpdatedAppSettings
#   type: string
#   default: 'No'
- name: AppSettings
  type: string
  default: ''

jobs:
  - deployment: deploy_azure_function
    environment: ${{ parameters.EnvironmentName }}
    strategy:
      runOnce:
        deploy:
          steps:

          # - task: AzureAppServiceSettings@1
          #   displayName: Update app settings
          #   condition: eq(${{ parameters.UpdatedAppSettings }}, 'Yes')
          #   inputs:
          #     azureSubscription: '${{ parameters.AzureSubscription }}'
          #     appName: '${{ parameters.AzureFunctionName }}'
          #     resourceGroupName: '${{ parameters.AzureResourceGroup }}'
          #     appSettings: '${{ parameters.AppSettings }}'


          - task: AzureFunctionApp@2
            inputs:
              connectedServiceNameARM: '${{ parameters.AzureSubscription }}'
              appType: 'functionApp'
              appName: '${{ parameters.AzureFunctionName }}'
              package: '$(Agent.BuildDirectory)\${{ parameters.ArtifactName }}\*.zip'
              deploymentMethod: 'auto'
              appSettings: '${{ parameters.AppSettings }}'