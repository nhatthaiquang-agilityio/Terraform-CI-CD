parameters:
- name: BuildTargetPath
  type: string
  default: ''
- name: DotNetVersion
  type: string
  default: '8.x'
- name: UnitTestPath
  type: string
  default: ''

jobs:
  - job: 'build'
    steps:
    - task: UseDotNet@2
      inputs:
        version: ${{ parameters.DotNetVersion }} # Specify the version you need

    - task: DotNetCoreCLI@2
      displayName: 'Restore ${{ parameters.BuildTargetPath }}'
      inputs:
        command: restore
        projects: ${{ parameters.BuildTargetPath }}

    - task: DotNetCoreCLI@2
      displayName: 'Build ${{ parameters.BuildTargetPath }}'
      inputs:
        command: publish
        arguments: '--configuration Release --output publish_output'
        projects: ${{ parameters.BuildTargetPath }}
        publishWebProjects: false
        modifyOutputPath: false
        zipAfterPublish: false

    - task: DotNetCoreCLI@2
      displayName: 'Run UnitTest'
      condition: ne('${{ parameters.UnitTestPath }}', '')
      inputs:
        command: test
        projects: ${{ parameters.UnitTestPath }}
        publishTestResults: true
        arguments: --configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover

    - task: ArchiveFiles@2
      displayName: "Archive files"
      inputs:
        rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
        includeRootFolder: false
        archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
        artifactName: 'drop'